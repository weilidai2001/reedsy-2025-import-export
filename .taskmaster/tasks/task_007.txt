# Task ID: 7
# Title: Implement Service Communication
# Status: pending
# Dependencies: 3, 4, 5, 6
# Priority: medium
# Description: Set up HTTP communication between services and ensure proper error handling and retries.
# Details:
Implement HTTP client with retry logic for inter-service communication. Use axios or similar library for HTTP requests. Configure appropriate timeouts and error handling.

Example implementation:
```javascript
const axios = require('axios');
const axiosRetry = require('axios-retry');

const client = axios.create({
  timeout: 5000
});

axiosRetry(client, {
  retries: 3,
  retryDelay: axiosRetry.exponentialDelay,
  retryCondition: (error) => {
    return axiosRetry.isNetworkOrIdempotentRequestError(error) || error.response.status >= 500;
  }
});

async function makeRequest(url, method, data) {
  try {
    const response = await client[method](url, data);
    return response.data;
  } catch (error) {
    console.error(`Error making ${method} request to ${url}:`, error);
    throw error;
  }
}
```

Implement health check endpoints for each service to monitor availability.

# Test Strategy:
Test communication between services with various scenarios including network failures. Verify retry logic works correctly. Test timeout handling. Verify health check endpoints.
